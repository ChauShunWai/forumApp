{"version":3,"sources":["reducers/authReducer.js","reducers/index.js","actions/types.js","reducers/threadReducer.js","reducers/commentReducer.js","apis/index.js","history.js","actions/index.js","components/GoogleAuth.js","components/Header.js","components/modal.js","components/Forum/Forum.js","components/Forum/ThreadForm.js","components/Forum/CreateThread.js","components/Forum/CreateComment.js","components/Forum/Thread.js","components/MainPage/MainPage.js","components/Materials/Materials.js","components/Forum/EditThread.js","components/App.js","index.js"],"names":["INITIAL_STATE","isSignedIn","userId","userName","combineReducers","auth","state","arguments","length","undefined","Object","objectSpread","action","type","payload","form","formReducer","threads","_","mapKeys","defineProperty","id","omit","comments","axios","create","baseURL","createHistory","loadThreads","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","wrap","_context","prev","next","api","get","sent","data","stop","this","_x","apply","editThread","val","_ref4","_callee4","_context4","patch","concat","history","push","_x5","GoogleAuth","onAuthChange","currentUser","_this","props","signIn","El","getBasicProfile","ig","signOut","renderAuthButton","react_default","createElement","className","onClick","onAuthClick","renderUserName","disconnect","_this2","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","Fragment","Nav","Item","React","Component","mapDispatchToProps","connect","Header","Navbar","bg","variant","expand","Link","to","Brand","Toggle","aria-controls","Collapse","components_GoogleAuth","MyModal","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleShow","bind","assertThisInitialized","handleClose","show","setState","Button","button","Modal","onHide","closeButton","Title","title","Body","message","Footer","Forum","renderThreads","map","element","style","paddingTop","key","Card","body","textDecoration","color","Subtitle","EditOrDeleteButtons","renderRefresh","paddingLeft","paddingRight","marginTop","marginRight","modal","deleteThread","renderThreadButton","_ref5","_callee5","_context5","delete","_x6","values","ThreadForm","renderError","error","touched","renderInput","_ref2","input","label","meta","Form","Label","Control","assign","autoComplete","renderTextarea","_ref3","as","rows","onSubmit","renderForm","handleSubmit","Group","Field","name","component","reduxForm","validate","errors","content","CreateThread","createThread","signInCheck","Forum_ThreadForm","_callee3","getState","_getState$auth","_context3","post","_x3","_x4","Comment","console","log","comment","Thread","createComment","CreateComment","formWrapped","threadId","_ref8","_callee8","_context8","_x9","_x10","MainPage","Materials","EditThread","thread","initialValues","pick","ownProps","match","params","App","Router","components_Header","Container","Image","src","fluid","Switch","Route","path","exact","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.b0f83eeb.chunk.js","sourcesContent":["import { SIGN_IN, SIGN_OUT } from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null,\r\n    userName: null\r\n}\r\n\r\nexport default (state = { ...INITIAL_STATE }, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { \r\n                ...state, \r\n                isSignedIn: true, \r\n                userId: action.payload.userId, \r\n                userName: action.payload.userName \r\n            };\r\n        case SIGN_OUT:\r\n            return { ...state, ...INITIAL_STATE, isSignedIn: false };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport authReducer from './authReducer'\r\nimport threadReducer from './threadReducer'\r\nimport commentReducer from './commentReducer'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    threads: threadReducer,\r\n    comments: commentReducer\r\n})","export const SIGN_IN = 'SIGN_IN'\r\nexport const SIGN_OUT = 'SIGN_OUT'\r\nexport const FETCH_THREADS = 'FETCH_THREADS'\r\nexport const FETCH_THREAD = 'FETCH_THREAD'\r\nexport const FETCH_COMMENTS = 'FETCH_COMMENTS'\r\nexport const FETCH_COMMENT = 'FETCH_COMMENT'\r\nexport const CREATE_THREAD = 'CREATE_THREAD'\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT'\r\nexport const EDIT_THREAD = 'EDIT_THREAD'\r\nexport const EDIT_COMMENT = 'EDIT_COMMENT'\r\nexport const DELETE_THREAD = 'DELETE_THREAD'\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT'","import {\r\n    FETCH_THREAD,\r\n    FETCH_THREADS,\r\n    CREATE_THREAD,\r\n    EDIT_THREAD,\r\n    DELETE_THREAD\r\n\r\n} from '../actions/types.js'\r\nimport _ from 'lodash'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_THREADS:\r\n            return { ..._.mapKeys(action.payload, 'id') };\r\n        case FETCH_THREAD ||\r\n            CREATE_THREAD ||\r\n            EDIT_THREAD:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_THREAD:\r\n            return { ..._.omit(state, action.payload) }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    FETCH_COMMENT,\r\n    FETCH_COMMENTS,\r\n    CREATE_COMMENT,\r\n    EDIT_COMMENT,\r\n    DELETE_COMMENT\r\n} from '../actions/types.js'\r\nimport _ from 'lodash'\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_COMMENTS:\r\n            return {...state};\r\n        case DELETE_COMMENT:\r\n            return _.omit(state, action.payload)\r\n        case FETCH_COMMENT:\r\n        case CREATE_COMMENT:\r\n        case EDIT_COMMENT:\r\n            return {...state, [action.payload.id]: action.payload}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3001'\r\n})","import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory();","import api from '../apis'\r\nimport history from '../history'\r\nimport {\r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    FETCH_THREADS,\r\n    FETCH_THREAD,\r\n    FETCH_COMMENTS,\r\n    FETCH_COMMENT,\r\n    CREATE_THREAD,\r\n    CREATE_COMMENT,\r\n    EDIT_THREAD,\r\n    EDIT_COMMENT,\r\n    DELETE_COMMENT,\r\n    DELETE_THREAD\r\n} from './types.js'\r\n\r\nexport const signIn = (userId, userName) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: {\r\n            userId,\r\n            userName\r\n        }\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const loadThreads = () => async dispatch => {\r\n    const response = await api.get('/threads');\r\n    dispatch({\r\n        type: FETCH_THREADS,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const loadThread = (id) => async dispatch => {\r\n    const response = await api.get(`/threads/${id}`)\r\n    dispatch({\r\n        type: FETCH_THREAD,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\n\r\nexport const createThread = (val) => async (dispatch, getState) => {\r\n    const { userId, userName } = getState().auth;\r\n    const response = await api.post('/threads', { ...val, userId, userName });\r\n    dispatch({\r\n        type: CREATE_THREAD,\r\n        payload: response.data\r\n    })\r\n    history.push('/forum');\r\n}\r\n\r\nexport const editThread = (id, val) => async dispatch => {\r\n    const response = await api.patch(`threads/${id}`, val)\r\n    dispatch({\r\n        type: EDIT_THREAD,\r\n        payload: response.data\r\n    })\r\n    history.push('/forum')\r\n}\r\n\r\nexport const deleteThread = (id) => async (dispatch) => {\r\n    await api.delete(`/threads/${id}`, id)\r\n    dispatch({\r\n        type: DELETE_THREAD,\r\n        payload: id\r\n    })\r\n}\r\n\r\nexport const loadComments = (threadId) => async dispatch => {\r\n    const response = await api.get(`/comments`)\r\n    dispatch({\r\n        type: FETCH_COMMENTS,\r\n        payload: response.data.filter(element => element.threadId === threadId)\r\n    })\r\n}\r\n\r\nexport const loadComment = (id) => async dispatch => {\r\n    const response = await api.get(`/comments/${id}`)\r\n    dispatch({\r\n        type: FETCH_COMMENT,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const createComment = (val, threadId) => async (dispatch, getState) => {\r\n    const { userId } = getState().auth;\r\n    const response = await api.post(`/comments`, { ...val, threadId, userId });\r\n    dispatch({\r\n        type: CREATE_COMMENT,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const editComment = (id, val) => async dispatch => {\r\n    const response = await api.patch(`comments/${id}`, val)\r\n    dispatch({\r\n        type: EDIT_COMMENT,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const deleteComment = (id) => async dispatch => {\r\n    await api.delete(`/comments/${id}`)\r\n    dispatch({\r\n        type: DELETE_COMMENT,\r\n        payload: id\r\n    })\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn, signOut } from '../actions'\r\nimport {Nav} from 'react-bootstrap'\r\n\r\nclass GoogleAuth extends React.Component {\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '88520721261-32agcpmf7pf3oocj25b6qujkf4j5vnv4.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.onAuthChange(this.auth.isSignedIn.get());\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    }\r\n\r\n    onAuthChange = (isSignedIn) => {\r\n        if (isSignedIn) {\r\n            const currentUser = this.auth.currentUser.get();\r\n            this.props.signIn(currentUser.El, currentUser.getBasicProfile().ig)\r\n        } else if (isSignedIn === null) {\r\n            return\r\n        } else {\r\n            this.props.signOut()\r\n        }\r\n    }\r\n\r\n    renderAuthButton = () => {\r\n        if (this.props.isSignedIn === null) {\r\n            return (\r\n                <div>\r\n                    <i className=\"fab fa-fw fa-google\"> </i>\r\n                    Sign In\r\n                </div>\r\n            )\r\n        } else if (!this.props.isSignedIn) {\r\n            return (\r\n                <div onClick={this.onAuthClick}>\r\n                    <i className=\"fab fa-fw fa-google\"> </i>\r\n                    Sign In\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div onClick={this.onAuthClick}>\r\n                    <i className=\"fab fa-fw fa-google\"> </i>\r\n                    Sign Out\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderUserName = () => {\r\n        if (this.props.isSignedIn){\r\n            return (\r\n                    <div className=\"nav-link\">\r\n                    <i className=\"fas fa-fw fa-user\"></i>\r\n                        {`Hi, ${this.props.userName}`}\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    onAuthClick = () => {\r\n        if (this.props.isSignedIn) {\r\n            this.auth.disconnect();\r\n        } else {\r\n            this.auth.signIn();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Nav.Item className=\"nav-link\">\r\n                    {this.renderAuthButton()}\r\n                </Nav.Item>\r\n                {this.renderUserName()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn,\r\n        userName: state.auth.userName\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = { signIn, signOut };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleAuth);","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport GoogleAuth from './GoogleAuth'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Link to=\"/\">\r\n                    <Navbar.Brand>\r\n                        Tutor\r\n                    </Navbar.Brand>\r\n                </Link>\r\n\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Link className=\"nav-link\" to=\"/materials\">\r\n                            <Nav.Item> \r\n                                Materials\r\n                            </Nav.Item>\r\n                        </Link>\r\n                        <Link className=\"nav-link\" to=\"/forum\">\r\n                            <Nav.Item>\r\n                                Forum\r\n                            </Nav.Item>\r\n                        </Link>\r\n                        <GoogleAuth />\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nclass MyModal extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n            show: false,\r\n        };\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    handleShow() {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button variant=\"danger\" onClick={this.handleShow}>\r\n                    {this.props.button}\r\n                </Button>\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.props.title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body> {this.props.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={this.props.onClick}>\r\n                            {this.props.button}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyModal;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadThreads, editThread, deleteThread } from '../../actions/index'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from '../modal'\r\n\r\n\r\nclass Forum extends React.Component {\r\n    componentDidMount() {\r\n        this.props.loadThreads();\r\n    }\r\n\r\n    renderThreadButton(props) {\r\n        const { isSignedIn } = props\r\n        if (isSignedIn) {\r\n            return (\r\n                <>\r\n                    <Link to=\"/createpost\">\r\n                        <div className=\"float-right\" style={\r\n                            {\r\n                                paddingLeft: '1.1rem',\r\n                                paddingRight: '1.1rem',\r\n                                marginTop: '7px',\r\n                            }\r\n                        }>\r\n                            <i className=\"fas fa-fw fa-plus\"></i>\r\n                            Create Thread\r\n                        </div>\r\n                    </Link>\r\n                    <br />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    EditOrDeleteButtons(element) {\r\n        if (this.props.userId === element.userId) {\r\n            return (\r\n                <>\r\n                    <div style={{ marginTop: '5px' }}>\r\n                        <Link to={`editThread/${element.id}`}\r\n                            className=\"btn btn-primary\"\r\n                            style={{ marginRight: '15px' }}\r\n                        >\r\n                            EDIT\r\n                        </Link>\r\n                        <Modal\r\n                            title='DELETE THREAD'\r\n                            message=\"you sure you want to delete?\"\r\n                            button=\"DELETE\"\r\n                            onClick={() => this.props.deleteThread(element.id)} \r\n                        />\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderThreads = () => {\r\n        //console.log(threads)\r\n        return this.props.threads.map(element => {\r\n            return (\r\n                <div className=\"d-inline-flex p-2\" style={{ paddingTop: '20px'}} key={`${element.id}`}>\r\n                    <Card body>\r\n                        <Link style={{textDecoration:'none', color: 'inherit'}} to={`/thread/${element.id}`}>\r\n                            <Card.Title>{element.title}</Card.Title>\r\n                            <Card.Subtitle>{element.userName}</Card.Subtitle>\r\n                        </Link>\r\n                        {this.EditOrDeleteButtons(element)}\r\n                    </Card>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderRefresh = () => {\r\n        return (\r\n            <button\r\n                onClick={() => {\r\n                    this.props.loadThreads();\r\n                }}\r\n                style={\r\n                    {\r\n                        paddingLeft: '1.1rem',\r\n                        paddingRight: '1.1rem',\r\n                        marginTop: '7px',\r\n                    }\r\n                }\r\n            >\r\n                <i className=\"fas fa-sync-alt\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRefresh()}\r\n                {(!this.props.isSignedIn)?<br/>:null}\r\n                {this.renderThreadButton(this.props)}\r\n                {this.renderThreads()}\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        threads: Object.values(state.threads),\r\n        isSignedIn: state.auth.isSignedIn,\r\n        userId: state.auth.userId\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = { loadThreads, editThread, deleteThread }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Forum);","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nclass ThreadForm extends React.Component {\r\n    renderError = ({ error, touched }) => {\r\n        if (touched && error) {\r\n            return <div className=\"alert alert-danger\">\r\n                {error}\r\n            </div>;\r\n        }\r\n    }\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Form.Label>{label}</Form.Label>\r\n                <Form.Control type=\"text\" {...input}\r\n                    autoComplete=\"off\"\r\n                />\r\n                {this.renderError(meta)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    renderTextarea = ({ input, label, meta }) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Form.Label>{label}</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"5\" {...input}\r\n                    autoComplete=\"off\"\r\n                />\r\n                {this.renderError(meta)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onSubmit = (val) => {\r\n        this.props.onSubmit(val);\r\n    }\r\n\r\n    renderForm = () => {\r\n        return(\r\n            <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Form.Group>\r\n                    <Field name=\"title\"\r\n                        component={this.renderInput}\r\n                        label='Title'\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Field name=\"content\"\r\n                        component={this.renderTextarea}\r\n                        label='Content'\r\n                    />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        ) \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.renderForm() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = val => {\r\n    const errors = {};\r\n    if (!val.title) {\r\n        errors.title = 'ENTER TITLE'\r\n    }\r\n    if (!val.content) {\r\n        errors.content = 'ENTER CONTENT'\r\n    }\r\n    if (val.title && val.title.length > 50) {\r\n        errors.title = 'title must be short than 25 characters'\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'ThreadFrom',\r\n    validate\r\n})(ThreadForm);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createThread } from '../../actions/index'\r\nimport ThreadForm from './ThreadForm'\r\n\r\nclass CreateThread extends React.Component {\r\n    onSubmit = (val) => {\r\n        this.props.createThread(val);\r\n    }\r\n\r\n    signInCheck = () => {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <ThreadForm onSubmit={this.onSubmit} />\r\n            )\r\n        } else {\r\n            return <div> Log In first</div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (  \r\n            <div>\r\n                <h3 className=\"d-flex justify-content-center\">Create a Thread</h3>\r\n                {this.signInCheck()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { createThread }\r\n)(CreateThread)","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nclass Comment extends React.Component {\r\n    renderError = ({error, touched}) => {\r\n        if(touched && error){\r\n            return <div className=\"alert alert-danger\">\r\n                {error}\r\n            </div>;\r\n        }\r\n    }\r\n\r\n    renderTextarea = ({ input, label, meta }) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Form.Label>{label}</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"5\" {...input}\r\n                    autoComplete=\"off\"\r\n                />\r\n                {this.renderError(meta)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onSubmit(val) {\r\n        console.log(val)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Form.Group>\r\n                    <Field name=\"Comment\" \r\n                        component={this.renderTextarea} \r\n                        label='Comment' \r\n                    />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (val) => {\r\n    const errors = {};\r\n    if (!val.comment) {\r\n        errors.comment = 'ENTER COMMENT'\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'createComment',\r\n    validate\r\n})(Comment);","import React from 'react'\r\nimport { reduxForm } from 'redux-form'\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport CreateComment from './CreateComment'\r\nimport { loadThreads, createComment } from '../../actions/index'\r\n\r\nclass Thread extends React.Component {\r\n    renderError = ({error, touched}) => {\r\n        if(touched && error){\r\n            return <div className=\"alert alert-danger\">\r\n                {error}\r\n            </div>;\r\n        }\r\n    }\r\n\r\n    renderTextarea = ({input, label, meta}) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Form.Label>{label}</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"5\" {...input}\r\n                    autoComplete=\"off\"\r\n                />\r\n                {this.renderError(meta)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onSubmit = (val) => {\r\n        this.props.createComment(val);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CreateComment />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //for later use\r\n    }\r\n}\r\n\r\nconst validate = val => {\r\n    const errors = {};\r\n    if (!val.comment){\r\n        errors.content = 'ENTER CONTENT'\r\n    }\r\n    return errors;\r\n}\r\n\r\nconst formWrapped =  reduxForm({\r\n    form: 'createComment',\r\n    validate\r\n})(Thread);\r\n\r\nexport default connect(mapStateToProps, { loadThreads, createComment })(formWrapped)","import React from 'react'\r\n\r\nexport default () => {\r\n    return(\r\n        <div>\r\n            <h1>Main</h1>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default () => {\r\n    return(\r\n        <div>\r\n            <h1>Materials</h1>\r\n        </div>\r\n    );\r\n}","import _ from 'lodash'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadThreads, editThread } from '../../actions/index'\r\nimport ThreadForm from './ThreadForm'\r\n\r\nclass EditThread extends React.Component {\r\n    componentDidMount() {\r\n        this.props.loadThreads();\r\n    }\r\n\r\n    onSubmit = (val) => {\r\n        this.props.editThread(this.props.thread.id, val);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isSignedIn) {\r\n            return (\r\n                <div>\r\n                    {`You have not signed in!\r\n                    (might need to load for a second)`}\r\n                </div>\r\n            )\r\n        }\r\n        if (!this.props.thread) {\r\n            return <div>Stream does not exist (or loading for few seconds)</div>\r\n        }\r\n        if (this.props.userId !== this.props.thread.userId) {\r\n            return <div>You are not the creator</div>\r\n        }\r\n        return (\r\n            <div>\r\n                <h3 className=\"d-flex justify-content-center\">Edit a Thread</h3>\r\n                <ThreadForm\r\n                    onSubmit={this.onSubmit}\r\n                    initialValues={_.pick(this.props.thread, 'title', 'content')}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn,\r\n        userId: state.auth.userId,\r\n        thread: state.threads[ownProps.match.params.id]\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loadThreads, editThread }\r\n)(EditThread);","import React from 'react';\r\nimport Header from './Header';\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport { \r\n    Forum, \r\n    CreateThread, \r\n    Materials, \r\n    MainPage, \r\n    Thread,\r\n    EditThread\r\n} from './index'\r\nimport { Container, Image} from 'react-bootstrap'\r\nimport history from '../history'\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Container>\r\n                        <Image src=\"https://www.mba.ust.hk/img/imagecache/_files_1_hkust_sundial_2014_leading_global_business_school__1966x640_1c85ffffff1.jpg\" fluid />\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={MainPage} />\r\n                            <Route path=\"/materials\" exact component={Materials} />\r\n                            <Route path=\"/forum\" exact component={Forum} />\r\n                            <Route path=\"/thread/:id\" exact component={Thread} />\r\n                            <Route path=\"/createPost\" exact component={CreateThread} />\r\n                            <Route path=\"/editThread/:id\" exact component={EditThread} />\r\n                        </Switch>\r\n                    </Container>\r\n                </React.Fragment>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport reducers from './reducers/index'\r\nimport App from './components/App'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}